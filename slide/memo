$ go version
go version go1.9.2 linux/amd64
$ go test -bench .
goos: linux
goarch: amd64
BenchmarkPopCount           	2000000000	         0.44 ns/op
BenchmarkBitCount           	2000000000	         0.45 ns/op
BenchmarkPopCountByClearing 	50000000	        33.9 ns/op
BenchmarkPopCountByShifting 	10000000	       179 ns/op
BenchmarkEmptyFunction      	2000000000	         0.46 ns/op
$ go test -gcflags='-l' -bench . 
BenchmarkPopCount           	200000000	         5.81 ns/op
BenchmarkBitCount           	300000000	         5.42 ns/op
BenchmarkPopCountByClearing 	50000000	        32.1 ns/op
BenchmarkPopCountByShifting 	10000000	       184 ns/op
BenchmarkEmptyFunction      	1000000000	         2.48 ns/op
$ go test -gcflags='-N' -bench .
BenchmarkPopCount           	200000000	         8.43 ns/op
BenchmarkBitCount           	200000000	         6.25 ns/op
BenchmarkPopCountByClearing 	20000000	       107 ns/op
BenchmarkPopCountByShifting 	5000000	       	       332 ns/op
BenchmarkEmptyFunction      	1000000000	         2.91 ns/op
$ go test -gcflags='-N -l' -bench .
BenchmarkPopCount           	200000000	         8.38 ns/op
BenchmarkBitCount           	200000000	         9.45 ns/op
BenchmarkPopCountByClearing 	10000000	       110 ns/op
BenchmarkPopCountByShifting 	5000000	       	       334 ns/op
BenchmarkEmptyFunction      	500000000	         3.87 ns/op

$ go version
go version go1.7 linux/amd64
$ go test -bench .
BenchmarkPopCount           	2000000000	         0.42 ns/op
BenchmarkBitCount           	2000000000	         0.49 ns/op
BenchmarkPopCountByClearing 	100000000	        22.8 ns/op
BenchmarkPopCountByShifting 	10000000	       107 ns/op
BenchmarkEmptyFunction      	2000000000	         0.43 ns/op
$ go test -gcflags='-l' -bench . 
BenchmarkPopCount           	200000000	         6.71 ns/op
BenchmarkBitCount           	300000000	         5.90 ns/op
BenchmarkPopCountByClearing 	50000000	        27.4 ns/op
BenchmarkPopCountByShifting 	20000000	        95.3 ns/op
BenchmarkEmptyFunction      	1000000000	         2.50 ns/op
$ go test -gcflags='-N' -bench .
BenchmarkPopCount           	200000000	         7.38 ns/op
BenchmarkBitCount           	300000000	         6.36 ns/op
BenchmarkPopCountByClearing 	20000000	       119 ns/op
BenchmarkPopCountByShifting 	 5000000	       280 ns/op
BenchmarkEmptyFunction      	1000000000	         2.66 ns/op
$ go test -gcflags='-N -l' -bench .
BenchmarkPopCount           	200000000	         8.18 ns/op
BenchmarkBitCount           	200000000	         7.62 ns/op
BenchmarkPopCountByClearing 	10000000	       121 ns/op
BenchmarkPopCountByShifting 	 5000000	       272 ns/op
BenchmarkEmptyFunction      	500000000	         3.67 ns/op



$ go version
go version go1.6.4 linux/amd64
$ go test -bench .
BenchmarkPopCount          	200000000	         6.89 ns/op
BenchmarkBitCount          	500000000	         3.46 ns/op
BenchmarkPopCountByClearing	50000000	        30.9 ns/op
BenchmarkPopCountByShifting	20000000	       121 ns/op
BenchmarkEmptyFunction     	2000000000	         0.41 ns/op
$ go test -gcflags='-l' -bench . 
BenchmarkPopCount          	200000000	         8.58 ns/op
BenchmarkBitCount          	200000000	         6.66 ns/op
BenchmarkPopCountByClearing	50000000	        30.8 ns/op
BenchmarkPopCountByShifting	10000000	       127 ns/op
BenchmarkEmptyFunction     	1000000000	         2.50 ns/op
$ go test -gcflags='-N' -bench .
BenchmarkPopCount          	200000000	        10.3 ns/op
BenchmarkBitCount          	200000000	        10.3 ns/op
BenchmarkPopCountByClearing	20000000	       123 ns/op
BenchmarkPopCountByShifting	 5000000	       316 ns/op
BenchmarkEmptyFunction     	300000000	         4.46 ns/op
$ go test -gcflags='-N -l' -bench .
BenchmarkPopCount          	200000000	        10.7 ns/op
BenchmarkBitCount          	100000000	        11.4 ns/op
BenchmarkPopCountByClearing	10000000	       129 ns/op
BenchmarkPopCountByShifting	 5000000	       309 ns/op
BenchmarkEmptyFunction     	300000000	         4.74 ns/op


======== use global variable
go version go1.9.2 linux/amd64
BenchmarkPopCount               1000000000               2.25 ns/op
BenchmarkBitCount               2000000000               0.60 ns/op
BenchmarkPopCountByClearing     50000000                30.7 ns/op
BenchmarkPopCountByShifting      5000000               275 ns/op
BenchmarkEmptyFunction          2000000000               0.41 ns/op

go version go1.7 linux/amd64
BenchmarkPopCount               500000000                3.68 ns/op
BenchmarkBitCount               500000000                3.33 ns/op
BenchmarkPopCountByClearing     100000000               24.2 ns/op
BenchmarkPopCountByShifting     10000000               107 ns/op
BenchmarkEmptyFunction          2000000000               0.48 ns/op

go version go1.6.4
BenchmarkPopCount               200000000                7.38 ns/op
BenchmarkBitCount               500000000                3.51 ns/op
BenchmarkPopCountByClearing     50000000                33.3 ns/op
BenchmarkPopCountByShifting     10000000               128 ns/op
BenchmarkEmptyFunction          2000000000               0.41 ns/op
